name: Build and Push Docker Image

on:
  workflow_dispatch:

env:
  REPOSITORY: kenechukwujosiah

jobs:
  checkout:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.vars.outputs.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract Git SHA
        id: vars
        run: echo "sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Upload source code
        uses: actions/upload-artifact@v4
        with:
          name: source-code
          path: .

  build:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Download source code
        uses: actions/download-artifact@v4
        with:
          name: source-code
          path: .

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Build the application
        run: |
          npm run build
          ls -la dist

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-dist
          path: |
            dist
            node_modules
            package*.json
            Dockerfile

  docker:
    runs-on: ubuntu-latest
    needs: [checkout, build]
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-dist
          path: .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.REPOSITORY }}/eks-demo-frontend-user:${{ needs.checkout.outputs.sha }}
            ${{ env.REPOSITORY }}/eks-demo-frontend-user:latest
          build-args: |
            NODE_ENV=production
            BUILD_VERSION=${{ needs.checkout.outputs.sha }}
